{
"global":               #### These setting apply to all log senders
        {
        "maxFlowsPerPacket":20,                 # How many flows to put in a netflow packet.  Max 30 per RFC
        "maxTimeBetweenSending":30,             # Max number of seconds to wait before sending a partially-filled flow message
        "destFlowIP":"192.168.2.16",    # Flow Collector address
        "destFlowPort":9995,
        "srcFlowIP":"192.168.2.13"              # What source IP to set for the neflow packets.  This needs to be a device in the Kentik portal (Generic Router Type)
        },
"inputs":
[
        {
        "search": "DROPPED",                    # When configuring the rsyslog sender (or iptables) include this text in the logline as an identifier
        "sampling": 1,
        "field_map":                                    # netflow fields to find, and the regex to find them.  backslashes must be doubled because json is finicky
                {
                "destination_ip": "(?<=DST\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "source_ip": "(?<=SRC\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "octets": "(?<=LEN\\=)\\d{1,3}",
                "destination_port": "(?<=DPT\\=)\\d+",
                "source_port": "(?<=SPT\\=)\\d+",
                "source_interface": "(?<=IN\\=)[A-Za-z0-9]+",
                "destination_interface": "(?<=OUT\\=)[A-Za-z0-9]+",
                "protocol": "(?<=PROTO\\=)[A-Z]+"
                },
        "transformations":              # This will let you map log fields (text?) into the numeric values that netflow expects.  REQUIRED!!!!
                {
                "source_interface":
                        {
                        "ens160":1,
                        "ens192":2,
                        "kernel":0,
                        "lo":6
                        },
                "destination_interface":
                        {
                        "ens160":1,
                        "ens192":2,
                        "kernel":0,
                        "lo":6
                        },
                "protocol":
                        {
                        "UDP":17,
                        "TCP":6,
                        "ICMP":1
                        }
                },
        "defaults":                     #If a value is NOT included in the log message, then use these values to avoid nulls
                {
                "source_interface":"kernel",
                "destination_interface":"kernel"
                },
        "overrides":            #This will let you over-write what's in the log for any specific data field.
                {
                "packets": 1
                }
        },
        {
        "search": "logger-10",                  # When configuring the rsyslog sender (or iptables) include this text in the logline as an identifier
        "sampling": 1,
        "field_map":                                    # netflow fields to find, and the regex to find them.  backslashes must be doubled because json is finicky
                {
                "destination_ip": "(?<=DST\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "source_ip": "(?<=SRC\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "octets": "(?<=LEN\\=)\\d{1,3}",
                "destination_port": "(?<=DPT\\=)\\d+",
                "source_port": "(?<=SPT\\=)\\d+",
                "source_interface": "(?<=IN\\=)[A-Za-z0-9]+",
                "destination_interface": "(?<=OUT\\=)[A-Za-z0-9]+",
                "protocol": "(?<=PROTO\\=)[A-Z]+"
                },
        "transformations":              # This will let you map log fields (text?) into the numeric values that netflow expects.  REQUIRED!!!!
                {
                "source_interface":
                        {
                        "eth0":1,
                        "eth1":2,
                        "eth2":3,
                        "eth3":4,
                        "eth3.10":7,
                        "eth3.20":8,
                        "eth4":5,
                        "kernel":0,
                        "lo":9
                        },
                "destination_interface":
                        {
                        "eth0":1,
                        "eth1":2,
                        "eth2":3,
                        "eth3":4,
                        "eth3.10":7,
                        "eth3.20":8,
                        "eth4":5,
                        "kernel":0,
                        "lo":9
                        },
                "protocol":
                        {
                        "UDP":17,
                        "TCP":6,
                        "ICMP":1
                        }
                },
        "defaults":                     #If a value is NOT included in the log message, then use these values to avoid nulls
                {
                "source_interface":"kernel",
                "destination_interface":"kernel"
                },
        "overrides":            #This will let you over-write what's in the log for any specific data field.
                {
                "packets": 1
                }
        },
        {
        "search": "pihole",
        "sampling": 1,
        "field_map":
                {
                "destination_ip": "(?<=DST\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "source_ip": "(?<=SRC\\=)\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}",
                "octets": "(?<=LEN\\=)\\d{1,3}",
                "destination_port": "(?<=DPT\\=)\\d+",
                "source_port": "(?<=SPT\\=)\\d+",
                "source_interface": "(?<=IN\\=)[A-Za-z0-9]+",
                "destination_interface": "(?<=OUT\\=)[A-Za-z0-9]+",
                "protocol": "(?<=PROTO\\=)[A-Z]+"
                },
        "transformations":
                {
                "source_interface":
                        {
                        "eth0":1,
                        "eth1":2,
                        "kernel":0,
                        "lo":6
                        },
                "destination_interface":
                        {
                        "lo":6,
                        "eth0":1,
                        "eth1":2,
                        "kernel":0
                        },
                "protocol":
                        {
                        "UDP":17,
                        "TCP":6,
                        "ICMP":1
                        }
                },
        "defaults":
                {
                "source_interface":"kernel",
                "destination_interface":"kernel"
                },
        "overrides":
                {
                "packets": 2
                }
        }
]
